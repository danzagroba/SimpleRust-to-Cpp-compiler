fn area() -> i32
{
    let mut asds: f32;
    let mut xfs: i32 = 4;
    return xfs;
}

fn main() {
    let mut array: [i32; 3];
    let mut dsad: [f32; 4];
    let mut bolo: [bool; 8];

    array[4] = 24;
    dsad[45] = 1.3;
    bolo [5] = true;
    
    array[3] = array[4];

    let mut xx: i32;
    
    let mut bb: bool = bolo[1];

    if(xx == xx && bb)
    {
        xx = 4;
    }

    let mut cc: i32 = 2;

    let mut zz: f32 = 4.3;

    let mut ff: f32;
    let mut ee: i32 = 4 + cc * 3;
    let mut kk: i32 = 1;

    xx = 45;
    bb = false && true;

    while bb == false
    {
        let mut dd: i32 = 29;
        for mut jj in dd .. xx {
            print!(jj);
        }
        dd = dd + 3;
        if(dd > xx)
        {
            bb = true;
        }
        else
        {
            bb = false;
        }
    }

    for mut ii in 0 .. 5 {
        bb = true;
        for mut xx in 3..59 
        {
            kk = kk + 2;
        }
    }
    let mut zagroba: bool = true;
    while bb == true {
        xx = 5;
        print!(xx);
        println!(bb);
    }
    zagroba = false;
    input!(xx);
}